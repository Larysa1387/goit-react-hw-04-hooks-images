{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.module.css","services/imageApi/imageApi.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.js","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["module","exports","api","fetchImage","searchQuery","page","fetch","then","res","ok","json","Promise","reject","Error","Searchbar","onSubmit","useState","setSearchQuery","className","s","SearchForm","event","preventDefault","trim","toast","warn","type","SearchForm_button","SearchForm_button_label","SearchForm_input","autoComplete","autoFocus","placeholder","value","onChange","e","currentTarget","toLowerCase","ImageGalleryItem","webformatURL","tags","largeImage","modalOpen","onClick","src","alt","ImageGalleryItem_image","ImageGallery","images","map","id","largeImageURL","LoaderEffect","state","Loader","color","height","width","timeout","Component","Button","modalRoot","document","querySelector","Modal","modalClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","target","App","setImages","setPage","setLargeImage","loading","setLoading","error","setError","showModal","setShowModal","searchImagesFetch","imageAPI","imagesArr","hits","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","prevPage","autoClose","style","display","justifyContent","message","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4eb95a97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__11PNJ\",\"ImageGalleryItem_image\":\"ImageGalleryItem_ImageGalleryItem_image__2gen4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__vzLt4\",\"Modal\":\"Modal_Modal__1NlfH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__8pRBx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__x8CWW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2uCni\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2G5n1\",\"SearchForm\":\"Searchbar_SearchForm__3Lz8_\",\"SearchForm_button\":\"Searchbar_SearchForm_button__3pmk4\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__3wyP1\",\"SearchForm_input\":\"Searchbar_SearchForm_input__3GId5\"};","const KEY = '21781686-06f0d55f145dff9dbbb393fb1';\r\n\r\nfunction fetchImage(searchQuery, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(new Error('There is no data'));\r\n  });\r\n}\r\nconst api = { fetchImage };\r\n\r\nexport default api;\r\n","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport s from './Searchbar.module.css';\r\n\r\nexport default function Searchbar({onSubmit}) {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\nconst handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (searchQuery.trim() === '') {\r\n      toast.warn('Tipe your query!');\r\n      return\r\n    }\r\n    onSubmit(searchQuery);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { value } = e.currentTarget;\r\n    setSearchQuery(value.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={s.SearchForm_button}>\r\n          <span className={s.SearchForm_button_label}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={s.SearchForm_input}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={searchQuery}\r\n          onChange={handleInputChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryItem = ({\r\n  webformatURL,\r\n  tags,\r\n\r\n  largeImage,\r\n  modalOpen,\r\n}) => {\r\n  const sendLargeImage = () => {\r\n    modalOpen(largeImage);\r\n  };\r\n  return (\r\n    <li className={s.ImageGalleryItem}  onClick={sendLargeImage}>\r\n      <img src={webformatURL} alt={tags} className={s.ImageGalleryItem_image} />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  largeImage: PropTypes.string.isRequired,\r\n  modalOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\n\r\n\r\nconst ImageGallery = ({ images, modalOpen }) => {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {images.map(({ webformatURL, tags, id, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          webformatURL={webformatURL}\r\n          largeImage={largeImageURL}\r\n          tags={tags}\r\n          key={id}\r\n          modalOpen={modalOpen}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf( PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n  })).isRequired,\r\n  modalOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, {Component} from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nclass LoaderEffect extends Component {\r\n  state = {  }\r\n  render() {\r\n    return (\r\n      <Loader\r\n        className={s.Loader}\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={150}\r\n        width={150}\r\n        timeout={3000}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoaderEffect;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button className={s.Button} type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = { onClick: PropTypes.func.isRequired };\r\n\r\nexport default Button;\r\n","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ modalClose, largeImage }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.code === 'Escape') {\r\n      modalClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      modalClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={handleBackdropClick}>\r\n      <div className={s.Modal}>\r\n        <img src={largeImage} alt=\"\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  largeImage: PropTypes.string.isRequired,\r\n  modalClose: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport imageAPI from './services/imageApi/imageApi.jsx';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Loader from './components/Loader';\r\nimport Button from './components/Button';\r\nimport Modal from './components/Modal';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n  const [images, setImages] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [page, setPage] = useState(1);\r\n  const [largeImage, setLargeImage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (searchQuery) {\r\n      searchImagesFetch();\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchQuery]);\r\n\r\n  const searchImagesFetch = () => {\r\n    setLoading(true);\r\n    imageAPI\r\n      .fetchImage(searchQuery, page)\r\n      .then((imagesArr) => {\r\n        if (page === 1) {\r\n          setImages(imagesArr.hits)\r\n        } else {\r\n          setImages((prevState) => [...prevState, ...imagesArr.hits]);\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => setError(error))\r\n      .finally(() =>{\r\n        setLoading(false);\r\n        setPage((prevPage) => prevPage + 1);\r\n      });\r\n  };\r\n\r\n  const handleFormSubmit = (searchQuery) => {\r\n    setSearchQuery(searchQuery);\r\n    setImages([]);\r\n    setPage(1);\r\n    setError(null);\r\n  };\r\n\r\n  const modalOpen = (largeImage) => {\r\n    setShowModal(true);\r\n    setLargeImage(largeImage);\r\n  };\r\n\r\n  const modalClose = () => {\r\n    setShowModal(false);\r\n    setLargeImage('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer autoClose={3000} />\r\n      <Searchbar onSubmit={handleFormSubmit} />\r\n      {error && (\r\n        <h1 style={{ display: 'flex', justifyContent: 'center'}}>\r\n          {error.message}\r\n        </h1>\r\n      )}\r\n\r\n      {images && <ImageGallery images={images} modalOpen={modalOpen} />}\r\n      {showModal && <Modal modalClose={modalClose} largeImage={largeImage} />}\r\n      {loading && <Loader />}\r\n      {images.length !== 0 && <Button onClick={searchImagesFetch} />}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}